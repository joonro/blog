<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joon's Blog (Posts about windows)</title><link>http://joonro.github.io/blog/</link><description></description><atom:link href="http://joonro.github.io/blog/categories/windows.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Mon, 16 Jul 2018 17:50:28 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>My PowerShell Customizations</title><link>http://joonro.github.io/blog/posts/powershell-customizations.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;I describe my customizations for PowerShell. With these, my PowerShell
terminal looks like the following screenshot. Not only these customizations
make it look great, but also they make me productive in the command line in
Windows.&lt;/p&gt;
&lt;img alt="../images/posh_prompt.png" src="http://joonro.github.io/blog/images/posh_prompt.png"&gt;
&lt;div class="section" id="conemu"&gt;
&lt;h2&gt;ConEmu&lt;/h2&gt;
&lt;p&gt;I use ConEmu as my terminal emulator. ConEmu provides tabbed sessions,
changing color schemes on-the-fly, and many customization options.&lt;/p&gt;
&lt;div class="section" id="color-themes"&gt;
&lt;h3&gt;Color Themes&lt;/h3&gt;
&lt;p&gt;The screenshots are taken with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;moe-dark&lt;/span&gt; theme&lt;/tt&gt;. ConEmu comes with many color
schemes, and I also maintain a github repository which contains my favorite
color themes for ConEmu. You can check out the &lt;a class="reference external" href="https://github.com/joonro/ConEmu-Color-Themes"&gt;GitHub&lt;/a&gt; repository.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="posh-git-and-prompt-customization"&gt;
&lt;h2&gt;posh-git and prompt Customization&lt;/h2&gt;
&lt;p&gt;To get git-related information on your prompt, you should get &lt;a class="reference external" href="https://github.com/dahlbyk/posh-git"&gt;posh-git&lt;/a&gt;. Then,
you can show the git-related information along with other useful information by modifying
&lt;tt class="docutils literal"&gt;prompt()&lt;/tt&gt; function. For example:&lt;/p&gt;
&lt;pre class="code powershell"&gt;&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;# http://serverfault.com/questions/95431&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nb"&gt;Test-Administrator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-3"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Security.Principal.WindowsIdentity]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetCurrent&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;New-Object&lt;/span&gt; &lt;span class="n"&gt;Security&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Principal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;WindowsPrincipal&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;IsInRole&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;[Security.Principal.WindowsBuiltinRole]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Administrator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;prompt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-8"&gt;&lt;/a&gt;    &lt;span class="c"&gt;# https://github.com/dahlbyk/posh-git/wiki/Customizing-Your-PowerShell-Prompt&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-9"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;$origLastExitCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$LastExitCode&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-10"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-VcsStatus&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-12"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Administrator&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c"&gt;# if elevated&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-13"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;"(Elevated) "&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-14"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-16"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;"$env:USERNAME@"&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;DarkYellow&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-17"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;"$env:COMPUTERNAME"&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;Magenta&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-18"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;" : "&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;DarkGray&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-20"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;$curPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ExecutionContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SessionState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CurrentLocation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$curPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;StartsWith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToLower&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-22"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-23"&gt;&lt;/a&gt;        &lt;span class="nv"&gt;$curPath&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"~"&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$curPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SubString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$Home&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-24"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-26"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="nv"&gt;$curPath&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;Blue&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-27"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;" : "&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;DarkGray&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-28"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-Date&lt;/span&gt; &lt;span class="n"&gt;-Format&lt;/span&gt; &lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;DarkMagenta&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-29"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;" : "&lt;/span&gt; &lt;span class="n"&gt;-NoNewline&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;DarkGray&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-30"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;$LastExitCode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$origLastExitCode&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-31"&gt;&lt;/a&gt;    &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;`n&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$nestedPromptLevel&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="s2"&gt; "&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-32"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-33"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-34"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;posh-git&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-35"&gt;&lt;/a&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-36"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$global:GitPromptSettings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BeforeText&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'['&lt;/span&gt;
&lt;a name="rest_code_25dd1009b39b4939b594f597770d27cc-37"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$global:GitPromptSettings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AfterText&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'] '&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="color-coding-get-childitem"&gt;
&lt;h2&gt;Color coding &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Get-ChildItem&lt;/span&gt;&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;To color-code the results of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Get-ChildItem&lt;/span&gt;&lt;/tt&gt;, I use my own
&lt;a class="reference external" href="https://github.com/joonro/Get-ChildItemColor"&gt;Get-ChildItemColor&lt;/a&gt;. Once you install it, you can set aliases to the exposed functions:&lt;/p&gt;
&lt;pre class="code powershell"&gt;&lt;a name="rest_code_ef6ece0dd03544baa34dc5f20af490d4-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="nb"&gt;Get-ChildItemColor&lt;/span&gt;
&lt;a name="rest_code_ef6ece0dd03544baa34dc5f20af490d4-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_ef6ece0dd03544baa34dc5f20af490d4-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-Alias&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="nb"&gt;Get-ChildItemColor&lt;/span&gt; &lt;span class="n"&gt;-option&lt;/span&gt; &lt;span class="n"&gt;AllScope&lt;/span&gt;
&lt;a name="rest_code_ef6ece0dd03544baa34dc5f20af490d4-4"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-Alias&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt; &lt;span class="nb"&gt;Get-ChildItemColorFormatWide&lt;/span&gt; &lt;span class="n"&gt;-option&lt;/span&gt; &lt;span class="n"&gt;AllScope&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;so you have colored versions of &lt;tt class="docutils literal"&gt;l&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;ls&lt;/tt&gt; equivalents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="psreadline"&gt;
&lt;h2&gt;PSReadLine&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/lzybkr/PSReadLine"&gt;PSReadLine&lt;/a&gt; makes PowerShell to behave like &lt;tt class="docutils literal"&gt;zsh&lt;/tt&gt;, which is my favorite shell
in GNU/Linux. It gives you substring history search, incremental history
search, and awesome tab-completion. The following is my current setup:&lt;/p&gt;
&lt;pre class="code powershell"&gt;&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Import-Module&lt;/span&gt; &lt;span class="n"&gt;PSReadLine&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="n"&gt;-HistoryNoDuplicates&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-4"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="n"&gt;-HistorySearchCursorMovesToEnd&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-5"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="n"&gt;-HistorySaveStyle&lt;/span&gt; &lt;span class="n"&gt;SaveIncrementally&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-6"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadLineOption&lt;/span&gt; &lt;span class="n"&gt;-MaximumHistoryCount&lt;/span&gt; &lt;span class="n"&gt;4000&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-7"&gt;&lt;/a&gt;&lt;span class="c"&gt;# history substring search&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-8"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadlineKeyHandler&lt;/span&gt; &lt;span class="n"&gt;-Key&lt;/span&gt; &lt;span class="n"&gt;UpArrow&lt;/span&gt; &lt;span class="n"&gt;-Function&lt;/span&gt; &lt;span class="n"&gt;HistorySearchBackward&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-9"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadlineKeyHandler&lt;/span&gt; &lt;span class="n"&gt;-Key&lt;/span&gt; &lt;span class="n"&gt;DownArrow&lt;/span&gt; &lt;span class="n"&gt;-Function&lt;/span&gt; &lt;span class="n"&gt;HistorySearchForward&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-11"&gt;&lt;/a&gt;&lt;span class="c"&gt;# Tab completion&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-12"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadlineKeyHandler&lt;/span&gt; &lt;span class="n"&gt;-Chord&lt;/span&gt; &lt;span class="s1"&gt;'Shift+Tab'&lt;/span&gt; &lt;span class="n"&gt;-Function&lt;/span&gt; &lt;span class="n"&gt;Complete&lt;/span&gt;
&lt;a name="rest_code_930671354f2e4f4cb375190297630c1d-13"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-PSReadlineKeyHandler&lt;/span&gt; &lt;span class="n"&gt;-Key&lt;/span&gt; &lt;span class="n"&gt;Tab&lt;/span&gt; &lt;span class="n"&gt;-Function&lt;/span&gt; &lt;span class="n"&gt;MenuComplete&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;With these settings, I can press up and down arrows for history substring
search, and the tab completion shows me available candidates. For example:&lt;/p&gt;
&lt;img alt="../images/posh_PSReadLine_tab_completion.png" src="http://joonro.github.io/blog/images/posh_PSReadLine_tab_completion.png"&gt;
&lt;p&gt;You can also use &lt;tt class="docutils literal"&gt;CTRL + r&lt;/tt&gt; for incremental history search.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="others"&gt;
&lt;h2&gt;Others&lt;/h2&gt;
&lt;div class="section" id="cddash"&gt;
&lt;h3&gt;&lt;tt class="docutils literal"&gt;cddash&lt;/tt&gt;&lt;/h3&gt;
&lt;p&gt;You can use the following to have the "dash" functionality - namely, you can go
back to the previous location by typing &lt;tt class="docutils literal"&gt;cd -&lt;/tt&gt;. It is from
&lt;a class="reference external" href="http://goo.gl/xRbYbk"&gt;http://goo.gl/xRbYbk&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code powershell"&gt;&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;cddash&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-3"&gt;&lt;/a&gt;        &lt;span class="nv"&gt;$pwd&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$OLDPWD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-5"&gt;&lt;/a&gt;        &lt;span class="nv"&gt;$pwd&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-6"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-7"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;$tmp&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pwd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$pwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-10"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;Set-Location&lt;/span&gt; &lt;span class="nv"&gt;$pwd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-12"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;Set-Variable&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;OLDPWD&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="nv"&gt;$tmp&lt;/span&gt; &lt;span class="n"&gt;-Scope&lt;/span&gt; &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_b52eb687a36a44b2b30458ef93c11d30-15"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-Alias&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;-value&lt;/span&gt; &lt;span class="n"&gt;cddash&lt;/span&gt; &lt;span class="n"&gt;-Option&lt;/span&gt; &lt;span class="n"&gt;AllScope&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="boost-startup-speed"&gt;
&lt;h3&gt;Boost startup speed&lt;/h3&gt;
&lt;p&gt;If you feel it takes a lot of time to start a PowerShell session due to your
profile script, I found running the following (I saved it as &lt;tt class="docutils literal"&gt;ngen.ps1&lt;/tt&gt;) in an
elevated PowerShell helps a lot.&lt;/p&gt;
&lt;pre class="code powershell"&gt;&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-1"&gt;&lt;/a&gt;&lt;span class="nv"&gt;$env:path&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[Runtime.InteropServices.RuntimeEnvironment]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;GetRuntimeDirectory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-2"&gt;&lt;/a&gt;&lt;span class="no"&gt;[AppDomain]&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;&lt;span class="n"&gt;CurrentDomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAssemblies&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-3"&gt;&lt;/a&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-4"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;$Name&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Split-Path&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="n"&gt;-leaf&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-5"&gt;&lt;/a&gt;  &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="n"&gt;-ForegroundColor&lt;/span&gt; &lt;span class="n"&gt;Yellow&lt;/span&gt; &lt;span class="s2"&gt;"NGENing : $Name"&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-6"&gt;&lt;/a&gt;  &lt;span class="n"&gt;ngen&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="p"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;`t&lt;/span&gt;&lt;span class="s2"&gt;$_"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_eb06b17754eb40fea9ae5d673dee3b83-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Source: &lt;a class="reference external" href="http://stackoverflow.com/questions/4208694/"&gt;http://stackoverflow.com/questions/4208694/&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;[2017-04-22 Sat]&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Updated prompt customization script for the latest version of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;posh-git&lt;/span&gt;&lt;/tt&gt;
(0.7.2)&lt;/li&gt;
&lt;li&gt;Updated &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Git-ChildItemColor&lt;/span&gt;&lt;/tt&gt; related information&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;[2017-01-03 Tue]&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;Updated prompt customization script for the latest version of &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;posh-git&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>git</category><category>posh</category><category>PowerShell</category><category>settings</category><category>windows</category><guid>http://joonro.github.io/blog/posts/powershell-customizations.html</guid><pubDate>Sat, 22 Apr 2017 21:00:00 GMT</pubDate></item><item><title>Windows 10: How to Enable Dark mode in PowerShell</title><link>http://joonro.github.io/blog/posts/windows-10-enable-dark-mode-posh.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;With &lt;a class="reference external" href="https://blogs.windows.com/windowsexperience/2016/08/02/new-video-series-this-week-on-windows-highlights-windows-10-anniversary-update/"&gt;Windows 10 Anniversary Update&lt;/a&gt;, one can choose between the &lt;a class="reference external" href="https://blogs.windows.com/windowsexperience/2016/08/08/windows-10-tip-personalize-your-pc-by-enabling-the-dark-theme/"&gt;light and dark
modes&lt;/a&gt;. Here is a set of PowerShell commands to set this in case you want to automate
it. These are slightly modified commands from this &lt;a class="reference external" href="https://www.reddit.com/r/windows/comments/3f0n2u/windows_10_enable_dark_mode/"&gt;reddit&lt;/a&gt; post.&lt;/p&gt;
&lt;p&gt;To use the dark mode:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://joonro.github.io/blog/posts/windows-10-enable-dark-mode-posh.html#rest_code_f82d9d2c576a4b01953c3a451520ce39-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code PowerShell"&gt;&lt;a name="rest_code_f82d9d2c576a4b01953c3a451520ce39-0"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-ItemProperty&lt;/span&gt; &lt;span class="n"&gt;-Path&lt;/span&gt; &lt;span class="n"&gt;HKCU&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;SOFTWARE&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;CurrentVersion&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Themes&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Personalize&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;AppsUseLightTheme&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="n"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;To use the light mode:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="http://joonro.github.io/blog/posts/windows-10-enable-dark-mode-posh.html#rest_code_6e64d68aa53a43d1b51bd2eae1f50c36-0"&gt;0&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code PowerShell"&gt;&lt;a name="rest_code_6e64d68aa53a43d1b51bd2eae1f50c36-0"&gt;&lt;/a&gt;&lt;span class="nb"&gt;Set-ItemProperty&lt;/span&gt; &lt;span class="n"&gt;-Path&lt;/span&gt; &lt;span class="n"&gt;HKCU&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;SOFTWARE&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Microsoft&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Windows&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;CurrentVersion&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Themes&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Personalize&lt;/span&gt; &lt;span class="n"&gt;-Name&lt;/span&gt; &lt;span class="n"&gt;AppsUseLightTheme&lt;/span&gt; &lt;span class="n"&gt;-Value&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</description><category>dark</category><category>posh</category><category>PowerShell</category><category>settings</category><category>theme</category><category>windows</category><guid>http://joonro.github.io/blog/posts/windows-10-enable-dark-mode-posh.html</guid><pubDate>Wed, 10 Feb 2016 22:00:00 GMT</pubDate></item><item><title>Native desktop (toast) notifications for org-mode appointments in Windows</title><link>http://joonro.github.io/blog/posts/toast-notifications-org-mode-windows.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;I describe how to set up native desktop notifications (Toast notifications)
for org-mode appointments in Windows 8+.&lt;/p&gt;
&lt;div class="section" id="install-toast"&gt;
&lt;h2&gt;Install &lt;tt class="docutils literal"&gt;toast&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;I use &lt;tt class="docutils literal"&gt;toast.exe&lt;/tt&gt; from toaster project: &lt;a class="reference external" href="https://github.com/nels-o/toaster"&gt;https://github.com/nels-o/toaster&lt;/a&gt;. You
can &lt;tt class="docutils literal"&gt;git clone&lt;/tt&gt; the whole repo which includes the executable:&lt;/p&gt;
&lt;pre class="code posh"&gt;&lt;a name="rest_code_09bcf3e309ed4ebeb31bbfbc316073bc-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nels-o&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;toaster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="emacs-settings"&gt;
&lt;h2&gt;Emacs Settings&lt;/h2&gt;
&lt;p&gt;The following is pretty much the same to
&lt;a class="reference external" href="https://lists.gnu.org/archive/html/emacs-orgmode/2013-02/msg00644.html"&gt;https://lists.gnu.org/archive/html/emacs-orgmode/2013-02/msg00644.html&lt;/a&gt;. You
can modify &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;appt-message-warning-time&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;appt-display-interval&lt;/span&gt;&lt;/tt&gt; to your need:&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-time-msg-list&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;;; clear existing appt list&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-display-interval&lt;/span&gt; &lt;span class="ss"&gt;'5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;;; warn every 5 minutes from t - appt-message-warning-time&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-5"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-message-warning-time&lt;/span&gt; &lt;span class="ss"&gt;'15&lt;/span&gt;  &lt;span class="c1"&gt;;; send first warning 15 minutes before appointment&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-6"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-display-mode-line&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt;     &lt;span class="c1"&gt;;; don't show in the modeline&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-7"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-display-format&lt;/span&gt; &lt;span class="ss"&gt;'window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;;; pass warnings to the designated window function&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;appt-activate&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;;; activate appointment notification&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;display-time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="c1"&gt;;; activate time display&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="c1"&gt;;; generate the appt list from org agenda files on emacs launch&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;run-at-time&lt;/span&gt; &lt;span class="s"&gt;"24:01"&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt; &lt;span class="ss"&gt;'org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="c1"&gt;;; update appt list hourly&lt;/span&gt;
&lt;a name="rest_code_d30425f83b8447f892eb4a3a346d4134-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-finalize-agenda-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; update appt list on agenda view&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Next, specify the path to your &lt;tt class="docutils literal"&gt;toast&lt;/tt&gt; executable (note that I'm using
UNIX-style path here, seems to be working well):&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_937ec06a44aa478b882ae4326c377625-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defvar&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_937ec06a44aa478b882ae4326c377625-2"&gt;&lt;/a&gt;  &lt;span class="s"&gt;"/home/joon/Programs/toast/bin/Release/toast"&lt;/span&gt;
&lt;a name="rest_code_937ec06a44aa478b882ae4326c377625-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Set up the call to &lt;tt class="docutils literal"&gt;toast&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; set up the call to the notifier&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-send-notification&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shell-command&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-4"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -t \""&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-5"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -m \""&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; designate the window function for my-appt-send-notification&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-display&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;min-to-app&lt;/span&gt; &lt;span class="nv"&gt;new-time&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-9"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;toast-appt-send-notification&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-10"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"Appointment in %s minutes"&lt;/span&gt; &lt;span class="nv"&gt;min-to-app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;;; passed to -t in toast call&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"%s"&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;                                &lt;span class="c1"&gt;;; passed to -m in toast call&lt;/span&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_2005efbdee6c4868ab769a0b1a1299da-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-disp-window-function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-display&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now Emacs will use &lt;tt class="docutils literal"&gt;toast&lt;/tt&gt; to notify you of upcoming appointments:&lt;/p&gt;
&lt;img alt="../images/toast_example.png" src="http://joonro.github.io/blog/images/toast_example.png"&gt;
&lt;p&gt;If you want to be fancier, you can show an icon in the notification as
well. You can download an icon (from
&lt;a class="reference external" href="http://www.easyicon.net/language.en/540985-org_mode_icon.html"&gt;http://www.easyicon.net/language.en/540985-org_mode_icon.html&lt;/a&gt;, for example)
and modify &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;toast-appt-send-notification&lt;/span&gt;&lt;/tt&gt; by adding &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/tt&gt; argument (you have
to use Windows-style path here):&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; set up the call to the notifier&lt;/span&gt;
&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-send-notification&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shell-command&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-4"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -t \""&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-5"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -m \""&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_796b1c1a99df4617ae9cef64c9c88832-6"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -p C:\\Users\\joon\\Programs\\Assets\\Icons\\org_mode_256px_540985_easyicon.net.png"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;which makes notifications look very nice:&lt;/p&gt;
&lt;img alt="../images/toast_example_with_icon.png" src="http://joonro.github.io/blog/images/toast_example_with_icon.png"&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>howto</category><category>org-mode</category><category>setting</category><category>toast</category><category>windows</category><guid>http://joonro.github.io/blog/posts/toast-notifications-org-mode-windows.html</guid><pubDate>Sat, 26 Dec 2015 06:00:00 GMT</pubDate></item><item><title>How to set up inverse and forward search in LyX for Windows</title><link>http://joonro.github.io/blog/posts/inverse-and-forward-search-lyx-windows.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;I describe how to set up &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Inverse_search"&gt;inverse&lt;/a&gt; and forward search in LyX for the Windows
environment, with &lt;a class="reference external" href="http://www.sumatrapdfreader.org/free-pdf-reader.html"&gt;SumatraPDF&lt;/a&gt; as the pdf viewer. Inverse search lets you
quickly move to the corresponding part of a LyX (or LaTeX) source from its pdf
output, typically by clicking on the text in the pdf viewer. Forward search
works in the opposite direction; from the LyX (or LaTeX) source, you can
invoke forward search to make the pdf viewer scroll through the pdf document
so the output counterpart of the source is shown. They are very useful
especially when you are editing a long document. Most of the instructions
overlap with those found at &lt;a class="reference external" href="http://wiki.lyx.org/LyX/SyncTeX#toc3"&gt;http://wiki.lyx.org/LyX/SyncTeX#toc3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://joonro.github.io/blog/posts/inverse-and-forward-search-lyx-windows.html"&gt; click to read the rest of the article …&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>autohotkey</category><category>howto</category><category>latex</category><category>lyx</category><category>setting</category><category>windows</category><guid>http://joonro.github.io/blog/posts/inverse-and-forward-search-lyx-windows.html</guid><pubDate>Sat, 10 Oct 2015 05:00:00 GMT</pubDate></item><item><title>Installing GNU Scientific Library (GSL) and CythonGSL in Windows</title><link>http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;div id="table-of-contents"&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline3"&gt;1. Download&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline1"&gt;1.1. GSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline2"&gt;1.2. CythonGSL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline4"&gt;2. Installing GSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline7"&gt;3. Environmental Variables&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline5"&gt;3.1. &lt;code&gt;LIB_GSL&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline6"&gt;3.2. &lt;code&gt;PATH&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html#orgheadline8"&gt;4. Installing CythonGSL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
I describe how to install GNU Scientific Library (GSL) for CythonGSL in
Windows.
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://github.com/twiecki/CythonGSL"&gt;CythonGSL&lt;/a&gt; is a great module which expose functions of GNU Scientific Library
(GSL) to Cython so you can use them in your Cython extension modules
conveniently.
&lt;/p&gt;

&lt;p&gt;
In GNU/Linux, you can install GSL library with development header files with a
one liner (for example, &lt;code&gt;$ sudo zypper install gsl-devel&lt;/code&gt; in &lt;a href="https://www.opensuse.org/"&gt;openSUSE&lt;/a&gt;), but in
Windows it is a bit more involved, and if you are not familiar with these kind
of stuff (like me) it can take hours to figure out what is wrong. I hope this
post will save some time for others.
&lt;/p&gt;

&lt;p&gt;
In sum, you need to do 1) download and unpack GSL with header files and right
architecture, 2) set &lt;code&gt;LIB_GSL&lt;/code&gt; environmental variable to the GSL directory,
and 3) add the path to the &lt;code&gt;bin&lt;/code&gt; subdirectory of the GSL directory to &lt;code&gt;PATH&lt;/code&gt;
environmental variable.
&lt;/p&gt;

&lt;div id="outline-container-orgheadline3" class="outline-2"&gt;
&lt;h3 id="orgheadline3"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; Download&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-orgheadline1" class="outline-3"&gt;
&lt;h4 id="orgheadline1"&gt;&lt;span class="section-number-3"&gt;1.1&lt;/span&gt; GSL&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
&lt;a href="https://code.google.com/p/oscats/downloads/list"&gt;oscats&lt;/a&gt; project has the latest GSL Windows DLL and headers for both 32 and
64-bit. Make sure you download the one for the right architecture (the same
one as your Python installation). For example, &lt;code&gt;gsl-1.15-dev-win64.zip&lt;/code&gt; for
the 64-bit.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgheadline2" class="outline-3"&gt;
&lt;h4 id="orgheadline2"&gt;&lt;span class="section-number-3"&gt;1.2&lt;/span&gt; CythonGSL&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
If you use git, you can download CythonGSL with &lt;code&gt;git clone&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-shell"&gt;git clone git://github.com/twiecki/CythonGSL.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
or you can just download the &lt;a href="https://github.com/twiecki/CythonGSL/archive/master.zip"&gt;zip archive&lt;/a&gt; of the master branch.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline4" class="outline-2"&gt;
&lt;h3 id="orgheadline4"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; Installing GSL&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
Just extract the downloaded file to your preferred location such as
&lt;code&gt;C:\lib64\GSL&lt;/code&gt; or &lt;code&gt;C:\Users\YourName\lib\GSL&lt;/code&gt;. In general it is good idea to
not have any spaces in the path. From now on I will assume that you have
extracted the archive file into &lt;code&gt;C:\lib64\GSL&lt;/code&gt;, so if you extract it into
different location, change the path accordingly when you follow the
instructions below.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline7" class="outline-2"&gt;
&lt;h3 id="orgheadline7"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; Environmental Variables&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
You need to add an environmental variable &lt;code&gt;LIB_GSL&lt;/code&gt; and also add the path of
&lt;code&gt;\bin&lt;/code&gt; subdirectory of your GSL installation to your &lt;code&gt;PATH&lt;/code&gt; Environmental
variable.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgheadline5" class="outline-3"&gt;
&lt;h4 id="orgheadline5"&gt;&lt;span class="section-number-3"&gt;3.1&lt;/span&gt; &lt;code&gt;LIB_GSL&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;p&gt;
Create an environmental variable &lt;code&gt;LIB_GSL&lt;/code&gt; with the path to your GSL
installation. It is recommended to use Unix style path separator, &lt;code&gt;/&lt;/code&gt;
instead of &lt;code&gt;\&lt;/code&gt; for this:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-sh"&gt;LIB_GSL=C:/lib64/GSL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgheadline6" class="outline-3"&gt;
&lt;h4 id="orgheadline6"&gt;&lt;span class="section-number-3"&gt;3.2&lt;/span&gt; &lt;code&gt;PATH&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-3-2"&gt;
&lt;p&gt;
Add &lt;code&gt;C:\GSL\bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environmental variable. This is so Windows can
find the two DLL files, &lt;code&gt;libgsl-0.dll&lt;/code&gt; and &lt;code&gt;libgslcblas-0.dll&lt;/code&gt;. Otherwise,
your Cython code will compile, but it will raise the following error at
runtime:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-python"&gt;ImportError: DLL load failed: The specified module could not be found.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline8" class="outline-2"&gt;
&lt;h3 id="orgheadline8"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; Installing CythonGSL&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
If you have done &lt;code&gt;git clone&lt;/code&gt; then just &lt;code&gt;cd CythonGSL&lt;/code&gt; and if you have downloaded
&lt;code&gt;.zip&lt;/code&gt; archive, extract it and go to the directory. Then, following the
official instructions,
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-sh"&gt;python setup.py build
python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>cython</category><category>gsl</category><category>python</category><category>windows</category><guid>http://joonro.github.io/blog/posts/installing-gsl-and-cythongsl-in-windows.html</guid><pubDate>Mon, 25 May 2015 05:50:11 GMT</pubDate></item><item><title>org-mode Google calendar sync in Windows</title><link>http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;div id="table-of-contents"&gt;
&lt;h3&gt;Table of Contents&lt;/h3&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html#orgheadline3"&gt;1. Dependencies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html#orgheadline1"&gt;1.1. &lt;code&gt;ical2org.py&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html#orgheadline2"&gt;1.2. Find your private URL for your calendar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html#orgheadline4"&gt;2. PowerShell script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html#orgheadline5"&gt;3. Install cron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;
The &lt;a href="http://orgmode.org/worg/org-tutorials/org-google-sync.html"&gt;instructions&lt;/a&gt; at Org-mode does not cover the Windows case. I explain how
you can get the sync between Google calendar and org-mode in Windows.
&lt;/p&gt;

&lt;div id="outline-container-orgheadline3" class="outline-2"&gt;
&lt;h3 id="orgheadline3"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; Dependencies&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-orgheadline1" class="outline-3"&gt;
&lt;h4 id="orgheadline1"&gt;&lt;span class="section-number-3"&gt;1.1&lt;/span&gt; &lt;code&gt;ical2org.py&lt;/code&gt;&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
Get the &lt;code&gt;ical2org.py&lt;/code&gt; script from &lt;a href="https://github.com/asoroa/ical2org.py"&gt;https://github.com/asoroa/ical2org.py&lt;/a&gt;. You
have to have Python installed, and also need to install &lt;code&gt;icalendar&lt;/code&gt; and &lt;code&gt;pytz&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-sh"&gt;&amp;gt; pip install icalendar
&amp;gt; pip install pytz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline2" class="outline-3"&gt;
&lt;h4 id="orgheadline2"&gt;&lt;span class="section-number-3"&gt;1.2&lt;/span&gt; Find your private URL for your calendar&lt;/h4&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;p&gt;
Follow step 2 in this &lt;a href="http://orgmode.org/worg/org-tutorials/org-google-sync.html"&gt;instruction&lt;/a&gt; to get the private URL for your calendar.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline4" class="outline-2"&gt;
&lt;h3 id="orgheadline4"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; PowerShell script&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
First check if you can download your calendar with &lt;code&gt;Invoke-WebRequest&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-posh"&gt;&amp;gt; Invoke-WebRequest -URI &amp;lt;url to your private Google calendar&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
If it works, make a PowerShell script file,  &lt;code&gt;convert-gcal-to-org.ps1&lt;/code&gt;:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-posh"&gt;# customize these
$ICS2ORG = "&amp;lt;path to ical2org.py&amp;gt;"
$ICSFILE = "&amp;lt;path for icsfile&amp;gt;"
$ORGFILE = "&amp;lt;path to orgfile&amp;gt;"
$URL = "&amp;lt;url to your private Google calendar&amp;gt;"

# no customization needed below
$Content = (Invoke-WebRequest -URI $URL).Content
[System.IO.File]::WriteAllLines($ICSFILE, $Content)

python $ICS2ORG $ICSFILE $ORGFILE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
for example:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-posh"&gt;# customize these    
$ICS2ORG = "~/bin/ical2org.py"
$ICSFILE = "~/bin/gcal-shared.ical"
$ORGFILE = "~/gcal.org"
$URL = "https://www.google.com/calendar/ical/...../basic.ics"

# no customization needed below
$Content = (Invoke-WebRequest -URI $URL).Content
[System.IO.File]::WriteAllLines($ICSFILE, $Content) 

python $ICS2ORG $ICSFILE $ORGFILE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
Now try the script and see if it works:
&lt;/p&gt;

&lt;div class="org-src-container"&gt;


&lt;pre&gt;&lt;code class="lang-posh"&gt;&amp;gt; convert-gcal-to-org.ps1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;
If you have the output &lt;code&gt;org&lt;/code&gt; file in your &lt;code&gt;org-agenda-files&lt;/code&gt; list, you will
see the entries from Google calendar when you update your agenda in Emacs.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgheadline5" class="outline-2"&gt;
&lt;h3 id="orgheadline5"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; Install cron&lt;/h3&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
You can install &lt;a href="http://www.intelliadmin.com/index.php/2012/05/free-utility-a-simple-task-scheduler-for-windows/"&gt;IntelliAdmin Cron&lt;/a&gt; to periodically run the script and sync your
calendars with &lt;code&gt;org-mode&lt;/code&gt;. &lt;a href="http://thecrumb.com/2013/03/24/new-cron-for-windows/"&gt;Here&lt;/a&gt; is a blog post about this specific cron utility.
&lt;/p&gt;

&lt;p&gt;
Then, use the following to set up the cronjob, with appropriate schedule settings:
&lt;/p&gt;

&lt;dl class="org-dl"&gt;
&lt;dt&gt;EXE File&lt;/dt&gt;&lt;dd&gt;&lt;code&gt;C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;Arguments&lt;/dt&gt;&lt;dd&gt;&lt;code&gt;-file C:\PATH\TO\convert-gcal-to-org.ps1&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;
For example:
&lt;/p&gt;


&lt;div class="figure"&gt;
&lt;p&gt;&lt;img src="http://joonro.github.io/blog/wp-content/Capture-crontab-org-mode-google-sync.png" alt="Capture-crontab-org-mode-google-sync.png"&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>org</category><category>posh</category><category>windows</category><guid>http://joonro.github.io/blog/posts/org-mode-google-calendar-sync-in-windows.html</guid><pubDate>Sat, 09 May 2015 20:27:18 GMT</pubDate></item></channel></rss>