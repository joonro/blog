<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joon's Blog (Posts about org-mode)</title><link>http://joonro.github.io/blog/</link><description></description><atom:link href="http://joonro.github.io/blog/categories/org-mode.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Mon, 02 Mar 2020 00:17:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Syntax highlighting in LaTeX export in org-mode: specifying outputdir option for minted package</title><link>http://joonro.github.io/blog/posts/org-mode-outputdir-minted-latex-export/</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;When you do LaTeX export in org-mode, you can get syntax highlighting in pdf
output using &lt;code class="docutils literal"&gt;minted&lt;/code&gt; package, which uses &lt;code class="docutils literal"&gt;pygments&lt;/code&gt;. You can add the following
in your &lt;code class="docutils literal"&gt;init&lt;/code&gt; file:&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'ox-latex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'org-latex-packages-alist&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="s"&gt;"minted"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-listings&lt;/span&gt; &lt;span class="ss"&gt;'minted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-pdf-process&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-6"&gt;&lt;/a&gt;      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-7"&gt;&lt;/a&gt;        &lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;
&lt;a name="rest_code_e104301201874b0e9ba44e8b8f64bfaf-8"&gt;&lt;/a&gt;        &lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The problem with this is that if you want to export the document to a output
directory, (e.g., using &lt;code class="docutils literal"&gt;:EXPORT_FILE_NAME: ./Output/File_Name&lt;/code&gt; property),
then you will get the following error:&lt;/p&gt;
&lt;pre class="code tex"&gt;&lt;a name="rest_code_c24370d54e7643afb9ae5e4f38689ac0-1"&gt;&lt;/a&gt;! Package minted Error: Missing Pygments output; &lt;span class="k"&gt;\inputminted&lt;/span&gt; was
&lt;a name="rest_code_c24370d54e7643afb9ae5e4f38689ac0-2"&gt;&lt;/a&gt;probably given a file that does not exist--otherwise, you may need
&lt;a name="rest_code_c24370d54e7643afb9ae5e4f38689ac0-3"&gt;&lt;/a&gt;the outputdir package option, or may be using an incompatible build tool.
&lt;/pre&gt;&lt;p&gt;because &lt;code class="docutils literal"&gt;minted&lt;/code&gt; does not know where to find the intermediate file.&lt;/p&gt;
&lt;p&gt;My solution is first commenting out the &lt;code class="docutils literal"&gt;minted&lt;/code&gt; package part:&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'ox-latex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;(add-to-list 'org-latex-packages-alist '("" "minted"))&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-listings&lt;/span&gt; &lt;span class="ss"&gt;'minted&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-latex-pdf-process&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-6"&gt;&lt;/a&gt;      &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-7"&gt;&lt;/a&gt;        &lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;
&lt;a name="rest_code_a071dfd98f1d47f59ba21842866abf10-8"&gt;&lt;/a&gt;        &lt;span class="s"&gt;"pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;and then manually load &lt;code class="docutils literal"&gt;minted&lt;/code&gt; package with specifying &lt;code class="docutils literal"&gt;outputdir&lt;/code&gt; option in the org file:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_958208ffa9dc43558bd538a8d302de9a-1"&gt;&lt;/a&gt;* Test
&lt;a name="rest_code_958208ffa9dc43558bd538a8d302de9a-2"&gt;&lt;/a&gt;:PROPERTIES:
&lt;a name="rest_code_958208ffa9dc43558bd538a8d302de9a-3"&gt;&lt;/a&gt;:EXPORT_FILE_NAME: Output/File_Name
&lt;a name="rest_code_958208ffa9dc43558bd538a8d302de9a-4"&gt;&lt;/a&gt;:EXPORT_LATEX_HEADER+: \usepackage[outputdir=Output]{minted}
&lt;a name="rest_code_958208ffa9dc43558bd538a8d302de9a-5"&gt;&lt;/a&gt;:END:
&lt;/pre&gt;&lt;p&gt;and it should work.&lt;/p&gt;
&lt;p&gt;Last, if you want to highlight &lt;code class="docutils literal"&gt;ipython&lt;/code&gt; block, you can add the following to
your &lt;code class="docutils literal"&gt;init&lt;/code&gt; file:&lt;/p&gt;
&lt;pre class="code common-lisp"&gt;&lt;a name="rest_code_9bf9322928a649a3bfb9dfcebcb78750-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt; &lt;span class="ss"&gt;'org-latex-minted-langs&lt;/span&gt; &lt;span class="o"&gt;'&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ipython&lt;/span&gt; &lt;span class="s"&gt;"python"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>export</category><category>latex</category><category>minted</category><category>org-mode</category><category>syntax highlighting</category><guid>http://joonro.github.io/blog/posts/org-mode-outputdir-minted-latex-export/</guid><pubDate>Sat, 18 Feb 2017 00:00:00 GMT</pubDate></item><item><title>Native desktop (toast) notifications for org-mode appointments in Windows</title><link>http://joonro.github.io/blog/posts/toast-notifications-org-mode-windows/</link><dc:creator>Joon Ro</dc:creator><description>&lt;div&gt;&lt;p&gt;I describe how to set up native desktop notifications (Toast notifications)
for org-mode appointments in Windows 8+.&lt;/p&gt;
&lt;div class="section" id="install-toast"&gt;
&lt;h2&gt;Install &lt;code class="docutils literal"&gt;toast&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;I use &lt;code class="docutils literal"&gt;toast.exe&lt;/code&gt; from toaster project: &lt;a class="reference external" href="https://github.com/nels-o/toaster"&gt;https://github.com/nels-o/toaster&lt;/a&gt;. You
can &lt;code class="docutils literal"&gt;git clone&lt;/code&gt; the whole repo which includes the executable:&lt;/p&gt;
&lt;pre class="code posh"&gt;&lt;a name="rest_code_df000de50c9245059d018ef75a71a2cd-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="p"&gt;//&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nels-o&lt;/span&gt;&lt;span class="p"&gt;/&lt;/span&gt;&lt;span class="n"&gt;toaster&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="emacs-settings"&gt;
&lt;h2&gt;Emacs Settings&lt;/h2&gt;
&lt;p&gt;The following is pretty much the same to
&lt;a class="reference external" href="https://lists.gnu.org/archive/html/emacs-orgmode/2013-02/msg00644.html"&gt;https://lists.gnu.org/archive/html/emacs-orgmode/2013-02/msg00644.html&lt;/a&gt;. You
can modify &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;appt-message-warning-time&lt;/span&gt;&lt;/code&gt; and &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;appt-display-interval&lt;/span&gt;&lt;/code&gt; to your need:&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-time-msg-list&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;;; clear existing appt list&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-display-interval&lt;/span&gt; &lt;span class="ss"&gt;'5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;;; warn every 5 minutes from t - appt-message-warning-time&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-5"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-message-warning-time&lt;/span&gt; &lt;span class="ss"&gt;'15&lt;/span&gt;  &lt;span class="c1"&gt;;; send first warning 15 minutes before appointment&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-6"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-display-mode-line&lt;/span&gt; &lt;span class="nv"&gt;nil&lt;/span&gt;     &lt;span class="c1"&gt;;; don't show in the modeline&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-7"&gt;&lt;/a&gt;  &lt;span class="nv"&gt;appt-display-format&lt;/span&gt; &lt;span class="ss"&gt;'window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;;; pass warnings to the designated window function&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;appt-activate&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;;; activate appointment notification&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;display-time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="c1"&gt;;; activate time display&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;             &lt;span class="c1"&gt;;; generate the appt list from org agenda files on emacs launch&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;run-at-time&lt;/span&gt; &lt;span class="s"&gt;"24:01"&lt;/span&gt; &lt;span class="mi"&gt;3600&lt;/span&gt; &lt;span class="ss"&gt;'org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="c1"&gt;;; update appt list hourly&lt;/span&gt;
&lt;a name="rest_code_6032247ff75d4da09177ebb1713ca127-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-finalize-agenda-hook&lt;/span&gt; &lt;span class="ss"&gt;'org-agenda-to-appt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; update appt list on agenda view&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Next, specify the path to your &lt;code class="docutils literal"&gt;toast&lt;/code&gt; executable (note that I'm using
UNIX-style path here, seems to be working well):&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_96f21b710f67410d9806396335e1a5b3-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defvar&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_96f21b710f67410d9806396335e1a5b3-2"&gt;&lt;/a&gt;  &lt;span class="s"&gt;"/home/joon/Programs/toast/bin/Release/toast"&lt;/span&gt;
&lt;a name="rest_code_96f21b710f67410d9806396335e1a5b3-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Set up the call to &lt;code class="docutils literal"&gt;toast&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; set up the call to the notifier&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-send-notification&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shell-command&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-4"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -t \""&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-5"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -m \""&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; designate the window function for my-appt-send-notification&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-display&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;min-to-app&lt;/span&gt; &lt;span class="nv"&gt;new-time&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-9"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;toast-appt-send-notification&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-10"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"Appointment in %s minutes"&lt;/span&gt; &lt;span class="nv"&gt;min-to-app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;;; passed to -t in toast call&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;format&lt;/span&gt; &lt;span class="s"&gt;"%s"&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;                                &lt;span class="c1"&gt;;; passed to -m in toast call&lt;/span&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_7e95820699794e4fa604134d78a1f88c-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;appt-disp-window-function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;function&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-display&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now Emacs will use &lt;code class="docutils literal"&gt;toast&lt;/code&gt; to notify you of upcoming appointments:&lt;/p&gt;
&lt;img alt="../images/toast_example.png" src="http://joonro.github.io/blog/posts/images/toast_example.png"&gt;
&lt;p&gt;If you want to be fancier, you can show an icon in the notification as
well. You can download an icon (from
&lt;a class="reference external" href="http://www.easyicon.net/language.en/540985-org_mode_icon.html"&gt;http://www.easyicon.net/language.en/540985-org_mode_icon.html&lt;/a&gt;, for example)
and modify &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;toast-appt-send-notification&lt;/span&gt;&lt;/code&gt; by adding &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-p&lt;/span&gt;&lt;/code&gt; argument (you have
to use Windows-style path here):&lt;/p&gt;
&lt;pre class="code scheme"&gt;&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;;; set up the call to the notifier&lt;/span&gt;
&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;toast-appt-send-notification&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;shell-command&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="nv"&gt;toast-notifier-path&lt;/span&gt;
&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-4"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -t \""&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-5"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -m \""&lt;/span&gt; &lt;span class="nv"&gt;msg&lt;/span&gt; &lt;span class="s"&gt;"\""&lt;/span&gt;
&lt;a name="rest_code_96bb8586851b421c8d28c1f1b5d62f1b-6"&gt;&lt;/a&gt;                         &lt;span class="s"&gt;" -p C:\\Users\\joon\\Programs\\Assets\\Icons\\org_mode_256px_540985_easyicon.net.png"&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;which makes notifications look very nice:&lt;/p&gt;
&lt;img alt="../images/toast_example_with_icon.png" src="http://joonro.github.io/blog/posts/images/toast_example_with_icon.png"&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>emacs</category><category>howto</category><category>org-mode</category><category>setting</category><category>toast</category><category>windows</category><guid>http://joonro.github.io/blog/posts/toast-notifications-org-mode-windows/</guid><pubDate>Sat, 26 Dec 2015 06:00:00 GMT</pubDate></item></channel></rss>